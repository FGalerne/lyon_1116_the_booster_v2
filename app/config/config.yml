imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BoosterBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    photo_booster_directory: '%kernel.root_dir%/../web/img/uploads/boosters'
    photo_society_directory: '%kernel.root_dir%/../web/img/uploads/societies'
    photo_tmp: '%kernel.root_dir%/../web/img/uploads/tmp'

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true, enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    encryption: ssl
    auth_mode: login
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Fosuser configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: BoosterBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    registration:
        form:
            type: BoosterBundle\Form\RegistrationType
            validation_groups: [Default]
            type: BoosterBundle\Form\RegistrationBoosterType
            validation_groups: [Default]
        confirmation:
            enabled: true
            template:   BoosterBundle:Emails:confirmed_Booster.html.twig

    from_email:
        address:        noreply@thebooster.com
        sender_name:    the booster

easy_admin:
    site_name: The booster
    design:
        brand_color: 'rgba(230,15,51,1)'
    entities:

        Booster:
            class: BoosterBundle\Entity\Booster
            label: "Booster"
            list:
                fields:
                    - photo
                    - { property: 'photo', type: 'image', base_path: 'img/uploads/boosters' }
                    - user.firstName
                    - { property: 'user.firstName', label: 'Prénom' }
                    - user.lastName
                    - { property: 'user.lastName', label: 'Nom' }
                    #- user.createTime
                    #- { property: 'user.createTime', label: 'Création' }
                    - user.username
                    - { property: 'user.username', label: 'Identifiant' }
                    - user.enabled
                    - { property: 'user.enabled', label: 'Activation du compte',  type: 'toggle' }
                    - competence1
                    - { property: 'competence1', label: 'Competence principale' }
                    - averageNotation
                    - { property: 'averageNotation', label: 'Note' }
                    - city
                    - { property: 'city', label: 'Ville' }
                    - hoursGiven
                    - { property: 'hoursGiven', label: 'Temps offert' }
                    - projectDoneNumber
                    - { property: 'projectDoneNumber', label: 'Projets réalisés' }

        Booste:
            class: BoosterBundle\Entity\Society
            label: "Booste"
            list:
                fields:
                    - photo
                    - { property: 'photo', type: 'image', base_path: 'img/uploads/societies' }
                    - user.firstName
                    - { property: 'user.firstName', label: 'Prénom' }
                    - user.lastName
                    - { property: 'user.lastName', label: 'Nom' }
                    #- user.createTime
                    #- { property: 'user.createTime', label: 'Création' }
                    - user.username
                    - { property: 'user.username', label: 'Identifiant' }
                    - user.enabled
                    - { property: 'user.enabled', label: 'Activation du compte',  type: 'toggle' }
                    - user.nameProject
                    - { property: 'user.nameProject', label: 'Projet' }
                    - user.siretNumber
                    - { property: 'user.siretNumber', label: 'Siret' }
                    - user.validationSociety
                    - { property: 'user.validationSociety', label: 'Validation',  type: 'toggle' }
                    - societyName
                    - { property: 'societyName', label: 'Societé' }
                    - averageNotation
                    - { property: 'averageNotation', label: 'Note' }
                    - hoursTaken
                    - { property: 'hoursTaken', label: 'Temps reçu' }
                    - projectDoneNumber
                    - { property: 'projectDoneNumber', label: 'Projets réalisés' }
                    #- deniedBoosters
                    #- { property: 'deniedBoosters', label: 'Aides refusés' }

        Project:
            class: BoosterBundle\Entity\Project
            label: "Projet"
            list:
                fields:
                    - projectName
                    - { property: 'projectName', label: 'Projet' }
                    - category
                    - { property: 'category', label: 'Catégorie' }
                    - creationStatus
                    - { property: 'creationStatus', label: 'Activation' }
                    - status
                    - { property: 'status', label: 'Status' }
                    - givenTime
                    - { property: 'givenTime', label: 'Temps reçu' }
                    - createTime
                    - { property: 'createTime', label: 'Création' }
                    - endTime
                    - { property: 'endTime', label: 'Fin' }

            form:
                fields:
                    - category
                    - description
                    - { property: 'creation_status', type:'choice', type_options: {choices: {'Accepte':'Accepté', 'Refuse':'Refusé', 'Accepte':'Supprimé'}}}
        FAQ:
            class: BoosterBundle\Entity\Faq
            label: "FAQ"
            list:
                fields:
                    - category
                    - { property: 'category', label: 'Catégorie' }
                    - question
                    - { property: 'question', label: 'Questions' }
                    - answer
                    - { property: 'answer', label: 'Réponse' }
            form:
                fields:
                    - category
                    - { property: 'category', label: 'Catégorie' }
                    - question
                    - { property: 'question', label: 'Questions' }
                    - answer
                    - { property: 'answer', label: 'Réponse' }
        Subscriptions:
            class: BoosterBundle\Entity\ProjectSubscription
            label: "Candidatures"
            list:
                fields:
                    - booster.user.username
                    - { property: 'booster.user.username', label: 'Booster' }
                    - project.projectName
                    - { property: 'project.projectName', label: 'Projet' }
                    - status
                    - { property: 'status', label: 'Status' }
                    - createTime
                    - { property: 'createTime', label: 'Création' }
        Transactions:
            class: BoosterBundle\Entity\Transaction
            label: "Transactions"
            list:
                fields:
                    - society.societyName
                    - { property: 'society.societyName', label: 'Societé' }
                    - society.user.username
                    - { property: 'society.user.username', label: 'Référent' }
                    - createTime
                    - { property: 'createTime', label: 'Date de paiement' }
                    - endTime
                    - { property: 'endTime', label: 'Date de fin de mise en avant' }


ewz_recaptcha:
    public_key: "%public_key_captcha%"
    private_key: "%private_key_captcha%"
    locale_from_request: true
    # Not needed as "%kernel.default_locale%" is the default value for the locale key
    locale_key:  %kernel.default_locale%

twig:
    form:
        resources:
            - 'BoosterBundle:Form:fields.html.twig'

jms_payment_core:
    secret: "%%secret_paypal%"

jms_payment_paypal:
    username: "%username_paypal_api%"
    password: "%password_paypal_api%"
    signature: "%signature_paypal_api%"



